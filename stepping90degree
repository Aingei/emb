// Written By Nikodem Bartnik - nikodembartnik.pl
#define STEPPER_PIN_1 23
#define STEPPER_PIN_2 22
#define STEPPER_PIN_3 19
#define STEPPER_PIN_4 18
int step_number = 0;

const int STEPS_PER_REVOLUTION = 2048; // Full revolution in steps for 28BYJ-48

void setup() {
  pinMode(STEPPER_PIN_1, OUTPUT);
  pinMode(STEPPER_PIN_2, OUTPUT);
  pinMode(STEPPER_PIN_3, OUTPUT);
  pinMode(STEPPER_PIN_4, OUTPUT);
}

void loop() {
  // Example: Rotate 90 degrees clockwise
  RotateByDegrees(90, true);
  delay(2000); // Wait 2 seconds
  // Example: Rotate 90 degrees counterclockwise
  

  // RotateByDegrees(90, false);
  // delay(2000); 
  // Wait 2 seconds
}

// Function to move the motor one step
void OneStep(bool dir) {
  if (dir) { // Clockwise
    switch (step_number) {
      case 0:
        digitalWrite(STEPPER_PIN_1, HIGH);
        digitalWrite(STEPPER_PIN_2, LOW);
        digitalWrite(STEPPER_PIN_3, LOW);
        digitalWrite(STEPPER_PIN_4, LOW);
        break;
      case 1:
        digitalWrite(STEPPER_PIN_1, LOW);
        digitalWrite(STEPPER_PIN_2, HIGH);
        digitalWrite(STEPPER_PIN_3, LOW);
        digitalWrite(STEPPER_PIN_4, LOW);
        break;
      case 2:
        digitalWrite(STEPPER_PIN_1, LOW);
        digitalWrite(STEPPER_PIN_2, LOW);
        digitalWrite(STEPPER_PIN_3, HIGH);
        digitalWrite(STEPPER_PIN_4, LOW);
        break;
      case 3:
        digitalWrite(STEPPER_PIN_1, LOW);
        digitalWrite(STEPPER_PIN_2, LOW);
        digitalWrite(STEPPER_PIN_3, LOW);
        digitalWrite(STEPPER_PIN_4, HIGH);
        break;
    }
  } else { // Counterclockwise
    switch (step_number) {
      case 0:
        digitalWrite(STEPPER_PIN_1, LOW);
        digitalWrite(STEPPER_PIN_2, LOW);
        digitalWrite(STEPPER_PIN_3, LOW);
        digitalWrite(STEPPER_PIN_4, HIGH);
        break;
      case 1:
        digitalWrite(STEPPER_PIN_1, LOW);
        digitalWrite(STEPPER_PIN_2, LOW);
        digitalWrite(STEPPER_PIN_3, HIGH);
        digitalWrite(STEPPER_PIN_4, LOW);
        break;
      case 2:
        digitalWrite(STEPPER_PIN_1, LOW);
        digitalWrite(STEPPER_PIN_2, HIGH);
        digitalWrite(STEPPER_PIN_3, LOW);
        digitalWrite(STEPPER_PIN_4, LOW);
        break;
      case 3:
        digitalWrite(STEPPER_PIN_1, HIGH);
        digitalWrite(STEPPER_PIN_2, LOW);
        digitalWrite(STEPPER_PIN_3, LOW);
        digitalWrite(STEPPER_PIN_4, LOW);
        break;
    }
  }

  step_number++;
  if (step_number > 3) {
    step_number = 0;
  }
}

// Function to rotate the motor by a specified degree
void RotateByDegrees(float degrees, bool dir) {
  int steps = (int)(degrees * STEPS_PER_REVOLUTION / 360.0); // Calculate steps for the given angle
  for (int i = 0; i < steps; i++) {
    OneStep(dir);
    delay(2); // Adjust delay for speed
  }
}
